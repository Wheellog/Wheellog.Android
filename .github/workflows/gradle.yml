# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Gradle CI

on:
  push:
  pull_request:

jobs:
  gradle-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Test
      run: ./gradlew test

    - name: Build debug artifact
      id: buildAllApks
      uses: eskatos/gradle-command-action@v1.3.3
      with:
        gradle-version: current
        wrapper-cache-enabled: true
        dependencies-cache-enabled: true
        configuration-cache-enabled: true
        arguments: assembleDebug


    - name: Get APK
      uses: actions/upload-artifact@v2.2.2
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
        
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#})"
      id: extract_branch
        
    - name: Send apk to telegram
      uses: appleboy/telegram-action@master
      if: github.event_name == 'pull_request'
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          The ${{ github.event_name }} event triggered second step.
          show the github variable ref: ${{ github.ref }}
          show the github variable commit: ${{ github.sha }}
          show the github variable ref: {{ commit.ref }}
          show the github variable commit: {{ commit.sha }}
          Commit Message: ${{ github.event.head_commit.message }}
        document: app/build/outputs/apk/debug/app-debug.apk
